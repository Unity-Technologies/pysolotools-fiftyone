name: release
on:
  release:
    types: [published]
defaults:
  run:
    shell: bash -l {0}
env:
  GCP_REGION: us-central1
  DOCKER_REGISTRY_NAME: docker-registry
  PYTHON_REGISTRY_NAME: python-registry
jobs:
  check-versions:
    name: Check github & python package versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: template
          environment-file: conda.yml
          miniforge-version: latest
      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -p
      - name: Get github and python package versions
        run: |
          echo "PACKAGE_VERSION=$(poetry version | cut -d ' ' -f2)" >> $GITHUB_ENV
          echo "GITHUB_VERSION=$(echo $GITHUB_REF_NAME | cut -d 'v' -f2)" >> $GITHUB_ENV
      - name: Check github and package versions
        if: ${{ env.PACKAGE_VERSION != env.GITHUB_VERSION }}
        uses: actions/github-script@v5
        with:
          script: |
            core.setFailed('Github release tag (${{ env.GITHUB_VERSION }}) \
            does not match the python package version (${{ env.PACKAGE_VERSION }})')
  publish-docker:
    name: Build & publish docker image
    runs-on: ubuntu-latest
    needs: check-versions
    env:
      TAG: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v2
      - uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.gcp_credentials }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login docker to Google Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCP_REGION }}-docker.pkg.dev
          username: _json_key_base64
          password: ${{ secrets.gcp_credentials }}
      - name: Build & push docker image
        uses: docker/build-push-action@v2
        env:
          REGISTRY_URL: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT }}/${{ env.DOCKER_REGISTRY_NAME }}
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY_URL }}/python-template:latest
            ${{ env.REGISTRY_URL }}/python-template:${{ env.TAG }}
          secrets: "gcp_credentials=${{ secrets.gcp_credentials }}"
  publish-python:
    name: Build & publish python package
    runs-on: ubuntu-latest
    needs: check-versions
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: template
          environment-file: conda.yml
          miniforge-version: latest
      - uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.gcp_credentials }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -p
          poetry config repositories.google_artifact_registry \
            https://$GCP_REGION-python.pkg.dev/$GOOGLE_CLOUD_PROJECT/$PYTHON_REGISTRY_NAME/
          poetry plugin add keyrings.google-artifactregistry-auth
      - name: Build & publish package to Google Artifact Registry
        run: |
          poetry publish -n --build -r google_artifact_registry
