[tool.poetry]
name = "python-template"
version = "0.2.0"
description = "Python package description."
license = "Copyright (c) 2022, Unity Software Inc. All rights reserved."
authors = [
    "John Doe <john.doe@unity3d.com>",
]
readme = "README.md"
repository = "https://github.com/otosystems/python-template"
homepage = "https://github.com/otosystems/python-template"
keywords = ['template']
packages = [
    { include = "template" },
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "~3.8"

[tool.poetry.dev-dependencies]
bandit = "^1.7.0"
black = "^21.11b1"
flake8 = "~3.9.0"
ipython = "^7.31.1"
isort = "^5.9.0"
mypy = "^0.910"
pre-commit = "^2.16.0"
pydocstyle = "^6.1.0"
pylint = "^2.12.0"
pytest = "^6.0.0"
pytest-black = "^0.3.12"
pytest-bandit = "^0.6.0"
pytest-cov = "^2.10.0"
pytest-env = "^0.6.0"
pytest-flake8 = "^1.0.0"
pytest-instafail = "^0.4"
pytest-isort = "^2.0.0"
pytest-mypy = "^0.8.0"
pytest-picked = "^0.4"
pytest-pydocstyle = "^2.2.0"
pytest-pylint = "^0.18.0"
pytest-sugar = "^0.9"
pytest-xdist = "^2.0"

[[tool.poetry.source]]
name = "gcp"
url = "https://us-central1-python.pkg.dev/unity-oto-ml-stg/python-registry/simple"

[tool.poetry.scripts]
get_list_cli = "template.module:ExampleClass.get_list_cli"

[tool.pytest.ini_options]
env = [
    "TEMPLATE_VAR=1",
]
markers = [
    "unit_test: marks as unit test (deselect with '-m \"not unit_test\"')",
    "functional_test: marks as functional test (deselect with '-m \"not functional_test\"')",
]
flake8-max-line-length = 119
flake8-ignore = ["E203", "W503"] # https://black.readthedocs.io/en/stable/faq.html#why-are-flake8-s-e203-and-w503-violated

[tool.pylint.messages_control]
max-line-length = 119

[tool.coverage.run]
source = ["template"]
omit = [
    "tests/*",
    "template/*__init__.py",
]

[tool.coverage.report]
skip_empty = true
exclude_lines = [
    "os.remove",
    "except ImportError",
    "raise ImportError",
    "raise NotImplementedError",
]
show_missing = true

[tool.isort]
profile = "black"

[tool.pydocstyle]
convention = "google"
